{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;;;;;;;;wBAAuB,WAAW;;;;iCACd,qBAAqB;;;;IAEpB,OAAO;AACf,WADQ,OAAO,CACd,GAAG,EAAE;0BADE,OAAO;;AAExB,QAAI,CAAC,GAAG,GAAG,GAAG,CAAC;GAChB;;eAHkB,OAAO;;mCAKpB;UACA,OAAO;;;;AAAP,mBAAO,gBAAQ,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO;;AAC1C,mBAAO,CAAC,KAAK,GAAG,0BACd,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,WAAQ,CAC1C,CAAC;;AAEF,gBAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;;AAEzC,gBAAI,CAAC,GAAG,CAAC,OAAO,GAAG,oCAAQ,OAAO,CAAC,CAAC;;AAEpC,gBAAI,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;;;;;;;KAC5C;;;SAhBkB,OAAO;;;qBAAP,OAAO","file":"index.js","sourcesContent":["import redisStore from 'koa-redis';\nimport session from 'koa-generic-session';\n\nexport default class Session {\n  constructor(app) {\n    this.app = app;\n  }\n\n  *setup() {\n    let options = { ...this.app.config.session };\n    options.store = new redisStore(\n      this.app.config.connections.redis.default\n    );\n\n    this.app.application.keys = options.keys;\n\n    this.app.session = session(options);\n\n    this.app.application.use(this.app.session);\n  }\n}\n"],"sourceRoot":"/source/"}